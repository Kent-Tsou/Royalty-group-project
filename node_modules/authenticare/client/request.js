"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _consume = _interopRequireDefault(require("./consume"));

var _endpoints = _interopRequireDefault(require("../endpoints"));

var _auth = require("./auth");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _default(endpoint, data) {
  var request = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _consume["default"];
  var headers = {
    Accept: 'application/json',
    'Content-Type': 'application/json'
  };
  return new Promise(function (resolve, reject) {
    try {
      verifyEndpoint(endpoint);
      verifyData(data);
    } catch (err) {
      reject(err);
    }

    request(endpoint, headers, data).then(function (res) {
      var _res$body;

      return resolve((0, _auth.saveAuthToken)((_res$body = res.body) === null || _res$body === void 0 ? void 0 : _res$body.token));
    })["catch"](function (err) {
      var _err$response, _err$response$body, _err$response2, _err$response2$body, _err$response2$body$e;

      var authErrorMessage = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$body = _err$response.body) === null || _err$response$body === void 0 ? void 0 : _err$response$body.errorType;
      var errMessage = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$body = _err$response2.body) === null || _err$response2$body === void 0 ? void 0 : (_err$response2$body$e = _err$response2$body.error) === null || _err$response2$body$e === void 0 ? void 0 : _err$response2$body$e.title;
      reject(new Error(authErrorMessage || errMessage || err.message));
    });
  });
} // Ensures the endpoint matches one of the known endpoints


function verifyEndpoint(endpoint) {
  var foundMatch = Object.values(_endpoints["default"]).some(function (ep) {
    return endpoint.includes(ep);
  });

  if (!foundMatch) {
    throw new Error('Endpoint does not match any of the known endpoints');
  }
}

function verifyData(data) {
  if (!data) {
    throw new Error('Data parameter is required');
  }

  if (!data.username) {
    throw new Error('Data parameter must have a username property');
  }
}